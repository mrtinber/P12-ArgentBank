swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Accounts API
      description: API for fetching a user accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/UserAccounts'
        '400':
          description: Invalid Fields
        '404': 
          description: Not Found
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Specific User Account API
      description: API for fetching a specific user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account to fetch
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User account retrieved successfully
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid Fields
        '404': 
          description: Not Found
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get: 
      security: 
        - Bearer: []
      tags: 
        - User Module
      summary: Specific User Account Transactions List API
      description: API for fetching transactions for a specific account
      parameters: 
        - in: header
          name: Authorization
          description: Attach Bearer JWT Token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account to fetch
          required: true
          type: string
      produces: 
        - application/json
      responses: 
        '200':
          description: User account transactions retrieved successfully
          schema: 
            $ref: '#/definitions/Transactions'
        '400': 
          description: Invalid Fields
        '404': 
          description: Not Found
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Specific Transaction API
      description: API for posting a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account to which the transaction belongs
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionCreate'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Specific Transaction API
      description: API for updating a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account to which the transaction belongs
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    delete: 
      security: 
        - Bearer: []
      tags: 
        - User Module
      summary: Specific Transaction API
      description: API for deleting a specific transaction
      parameters: 
        - in: header
          name: Authorization
          description: Attach Bearer JWT Token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account to fetch
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to fetch
          required: true
          type: string
      produces: 
        - application/json
      responses: 
        '200':
          description: Transaction deleted successfully
        '400': 
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  DeleteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactionId:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  UserAccounts:
    type: object
    properties:
      userId: 
        type: string
      accounts:
        type: array
        items: 
          $ref: '#/definitions/Account'
  Account: 
    type: object
    properties: 
      name: 
        type: string
      accountNumber: 
        type: number
      balance: 
        type: number
        format: float
      transactions: 
        type: array
        items: 
          $ref: '#/definitions/Transaction'
  Transactions:
    type: array
    items: 
      $ref: '#/definitions/Transaction'
  Transaction: 
    type: object
    properties: 
      transactionId: 
        type: string
      date: 
        type: string
        format: date
      description: 
        type: string
      amount: 
        type: number
        format: float
      notes: 
        type: string
      category:
        type: string
      transactionType: 
        type: string
  TransactionCreate:
    type: object
    properties:
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
        format: float
      notes:
        type: string
      category:
        type: string
      transactionType:
        type: string